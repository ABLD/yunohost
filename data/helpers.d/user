#!/bin/bash

# Check if a YunoHost user exists
#
# example: ynh_user_exists 'toto' || exit 1
#
# usage: ynh_user_exists --username=username
# | arg: -u, --username - the username to check
ynh_user_exists() {
    # Declare an array to define the options of this helper.
    local legacy_args=u
    declare -Ar args_array=( [u]=username= )
    local username
    # Manage arguments with getopts
    ynh_handle_getopts_args "$@"

    sudo yunohost user list --output-as json | grep -q "\"username\": \"${username}\""
}

# Retrieve a YunoHost user information
#
# example: mail=$(ynh_user_get_info 'toto' 'mail')
#
# usage: ynh_user_get_info --username=username --key=key
# | arg: -u, --username - the username to retrieve info from
# | arg: -k, --key - the key to retrieve
# | ret: string - the key's value
ynh_user_get_info() {
    # Declare an array to define the options of this helper.
    local legacy_args=uk
    declare -Ar args_array=( [u]=username= [k]=key= )
    local username
    local key
    # Manage arguments with getopts
    ynh_handle_getopts_args "$@"

    sudo yunohost user info "$username" --output-as plain | ynh_get_plain_key "$key"
}

# Get the list of YunoHost users
#
# example: for u in $(ynh_user_list); do ...
#
# usage: ynh_user_list
# | ret: string - one username per line
ynh_user_list() {
    sudo yunohost user list --output-as plain --quiet \
      | awk '/^##username$/{getline; print}'
}

# Check if a user exists on the system
#
# usage: ynh_system_user_exists --username=username
# | arg: -u, --username - the username to check
ynh_system_user_exists() {
    # Declare an array to define the options of this helper.
    local legacy_args=u
    declare -Ar args_array=( [u]=username= )
    local username
    # Manage arguments with getopts
    ynh_handle_getopts_args "$@"

    getent passwd "$username" &>/dev/null
}

# Create a system user
#
# usage: ynh_system_user_create --username=user_name [--home_dir=home_dir]
# | arg: -u, --username - Name of the system user that will be create
# | arg: -h, --home_dir - Path of the home dir for the user. Usually the final path of the app. If this argument is omitted, the user will be created without home
ynh_system_user_create () {
	# Declare an array to define the options of this helper.
	local legacy_args=uh
	declare -Ar args_array=( [u]=username= [h]=home_dir= )
	local username
	local home_dir
	# Manage arguments with getopts
	ynh_handle_getopts_args "$@"

	if ! ynh_system_user_exists "$username"	# Check if the user exists on the system
	then	# If the user doesn't exist
		if [ $# -ge 2 ]; then	# If a home dir is mentioned
			local user_home_dir="-d $home_dir"
		else
			local user_home_dir="--no-create-home"
		fi
		sudo useradd $user_home_dir --system --user-group $username --shell /usr/sbin/nologin || ynh_die --message="Unable to create $username system account"
	fi
}

# Delete a system user
#
# usage: ynh_system_user_delete --username=user_name
# | arg: -u, --username - Name of the system user that will be create
ynh_system_user_delete () {
    # Declare an array to define the options of this helper.
    local legacy_args=u
    declare -Ar args_array=( [u]=username= )
    local username
    # Manage arguments with getopts
    ynh_handle_getopts_args "$@"

    if ynh_system_user_exists "$username"	# Check if the user exists on the system
    then
		echo "Remove the user $username" >&2
		sudo userdel $username
	else
		echo "The user $username was not found" >&2
    fi
}
